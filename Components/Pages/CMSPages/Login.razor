@page "/Login"

<PageTitle>Login - EmptyProject</PageTitle>

<div class="container position-sticky z-index-sticky top-0">
    <div class="row">
        <div class="col-12">
            <EmptyProject.Components.Layout.NavBarHome></EmptyProject.Components.Layout.NavBarHome>
        </div>
    </div>
</div>
<div class="page-header align-items-start min-height-300 m-3 border-radius-xl" 
style="background-image: url('img/System/Landscape.jpg');" 
loading="lazy">
    <span class="mask bg-gradient-dark opacity-6"></span>
</div>
<div class="container mb-4">
    <div class="row mt-lg-n12 mt-md-n12 mt-n12 justify-content-center">
        <div class="col-xl-4 col-lg-5 col-md-7 mx-auto">
            <div class="card mt-8">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-success shadow-success border-radius-lg py-3 pe-1 text-center py-4">
                        <h4 class="font-weight-bolder text-white mt-1">
                            Acceder
                        </h4>
                        <p class="mb-1 text-sm text-white">
                            Ingresá tus credenciales
                        </p>
                    </div>
                </div>
                <div class="card-body">
                    <form method="post" @onsubmit="Submit"
                          @formname="login-form" class="text-start">
                        <AntiforgeryToken />
                        <div class="input-group input-group-static mb-3">
                            <label for="email">
                                <i class="fas fa-envelope"></i>&nbsp;
                                Email
                            </label>
                            <input type="email"
                            id="email"
                            class="form-control"
                            @bind="User.Email"
                            placeholder="user@example.com" />
                        </div>
                        <div class="input-group input-group-static mb-3">
                            <label for="password">
                                <i class="fas fa-key"></i>&nbsp;
                                Contraseña
                            </label>
                            <input type="password"
                            id="password"
                            class="form-control"
                            @bind="User.Password"/>
                        </div>
                        <div class="container text-center">
                            <button id="btn-login" type="submit"
                                    class="btn btn-success mt-3">
                                <i class="fas fa-unlock"></i>
                                Entrar
                            </button>
                        </div>
                    </form>
                    @if (Message != "")
                    {
                        @((MarkupString)Message)
                    }
                </div>
                <div class="card-footer text-center pt-0 px-lg-2 px-1">
                    <p class="mb-2 text-sm mx-auto">
                        No tienes cuenta?
                        <NavLink href="Contacto" 
                        class="text-success text-gradient font-weight-bold">
                            Creá una
                        </NavLink>
                    </p>
                    <p class="mb-4 text-sm mx-auto">
                        Olvidaste tu contraseña?
                        <NavLink href="RecuperarContrasena"
                                 class="text-success text-gradient font-weight-bold">
                            Recuperar contraseña
                        </NavLink>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<EmptyProject.Components.Layout.FooterHome></EmptyProject.Components.Layout.FooterHome>

@code {
    #region Properties
    [SupplyParameterFromForm]
    public User User { get; set; } = new();

    public string Message { get; set; } = "";
    #endregion

    protected override void OnInitialized()
    {
        //Look for saved user in shared component, simulates a session
        User = StateContainer.User == null ? new() : StateContainer.User;

        if (User.UserId != 0)
        {
            //Redirect to...
            NavigationManager.NavigateTo("Dashboard");
        }
        else
        {
            //Not logged user
        }
    }

    #region Events
    private void Submit()
    {
        try
        {
            if (User.Password == "" || User.Email == "")
            {
                Message = $@"
                        <div class=""alert alert-warning text-white font-weight-bold mt-3"" role=""alert"">
                            <i class=""fas fa-exclamation""></i>
                            Rellene todos los datos
                        </div>";
                return;
            }

            //Encrypt password
            string EncryptedPassword = Mentoria.Library.Security
                                            .EncodeString(User.Password);

            //Get user by email and password
            User = userRepository
                        .GetByEmailAndPassword(User.Email,
                        EncryptedPassword);

            if (User.UserId != 0)
            {
                //User found
                StateContainer.User = User;

                //Redirect to...
                NavigationManager.NavigateTo("/Dashboard");
            }
            else
            {
                //User not found
                Message = $@"
                        <div class=""alert alert-danger text-white font-weight-bold mt-3"" role=""alert"">
                            <i class=""fas fa-exclamation""></i>
                            Usuario no encontrado
                        </div>";

            }
        }
        catch (Exception ex)
        {
            Failure failure = new()
                {
                    Active = true,
                    DateTimeCreation = DateTime.Now,
                    DateTimeLastModification = DateTime.Now,
                    UserCreationId = 1,
                    UserLastModificationId = 1,
                    EmergencyLevel = 1,
                    Comment = "",
                    Message = ex.Message,
                    Source = ex.Source,
                    StackTrace = ex.StackTrace
                };

            failureRepository.Add(failure);

            Message = $@"
                        <div class=""alert alert-danger text-white font-weight-bold mt-3"" role=""alert"">
                            <i class=""fas fa-exclamation""></i>
                            Hubo un error. Intenta nuevamente. Mensaje de error: {ex.Message}
                        </div>";
        }
    }
    #endregion
}
